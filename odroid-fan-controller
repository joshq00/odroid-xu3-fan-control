#!/bin/bash
### BEGIN INIT INFO
# Provides:          odroid-fan-controller
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: odroid-fan-controller daemon
# Description:       Enable service provided by odroid-fan-controller daemon
### END INIT INFO

# copy me to /etc/init.d/odroid-fan-controller and run
#   update-rc.d odroid-fan-controller defaults
#   update-rc.d odroid-fan-controller enable


user="root"
cmd="/home/odroid/odroid-xu3-fan-control/odroid-xu3-fan-control.sh"

# name=`basename $0`
name="odroid-fan-controller"
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    cat "$pid_file"
    # pidof "${name}"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
    # ps "$(get_pid)" > /dev/null 2>&1
}

start() {
    if is_running; then
        echo "Already started"
        return
    fi

    echo "Starting $name"
    cd "$dir"
    # sudo -u "$user" $cmd >> "$stdout_log" 2>> "$stderr_log" &
    # sudo -u "${user}" ${cmd} >> "${stdout_log}" 2>> "${stderr_log}" &
    ${cmd} >> "${stdout_log}" 2>> "${stderr_log}" &
    echo $! > "$pid_file"
    if ! is_running; then
        echo "Unable to start, see $stdout_log and $stderr_log"
        exit 1
    fi
}

stop() {
    if is_running; then
        kill "$(get_pid)"
        for i in {1..5}; do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or may have failed"
            kill -9 "$(get_pid)"
            exit 1
        else
            echo "Stopped"
        fi
    else
        echo "Not running"
    fi
    echo
}

status() {
    if is_running; then
        echo "[ ok ] ${name} is running"
        exit 0
    else
        echo "[    ] ${name} is not running"
        exit 1
    fi
}

case "$1" in
    stop)
        stop
        ;;
    status)
        status
        ;;
    start|restart|reload|condrestart)
        stop
        start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
